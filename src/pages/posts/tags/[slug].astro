---
export const prerender = true;

import Layout from "../../../layouts/Layout.astro";
import BlogPost from "../../../components/Blog/BlogPost.astro";
import { Icon } from "astro-icon/components";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const allPosts = await getCollection("posts");

  const uniqueTags = [...new Set(allPosts.map((post) => post.data.tags).filter(x => x).flat())];

  return uniqueTags.map((slug) => {
    const filteredPosts = allPosts.filter((post) => { 
      if (!post.data.tags)
        return false;
      if (!slug)
        return false;
      return post.data.tags.includes(slug);
    });
    return {
      params: { slug },
      props: { posts: filteredPosts }
    }
  });
}

const { slug: tag } = Astro.params;
const { posts } = Astro.props;
---

<Layout>
  <main class="flex-auto">
    <div class="bg-midnight-blue py-4">
      <a href="/posts" class="max-w-[80rem] px-4 mx-auto font-bold duration-300 cursor-pointer hover:text-cyan-400 flex gap-4 items-center text-white">
        <Icon class="w-8 h-8" name="ph:arrow-left-light"/>
        <p>
          {tag} Posts
        </p>
      </a>
    </div>
    <ul class="text-white bg-gray-800 px-4 py-8 max-w-[80rem] mx-auto space-y-12">
      {
        posts.reverse().sort((x, y) => {
          return (new Date(y.data.date).valueOf() + new Date(x.data.date).valueOf());
        }).map((x, i) => {
          return <li class="list-none">
            <BlogPost tag={x.data.tags} shouldLazy={i > 1} image={x.data.image} date={x.data.date} 
            title={x.data.title} description={x.data.description} url={x.slug}/>
          </li>
        }
        )
      }
    </ul>
  </main>
</Layout>