---
import YearButton from "../components/Arts/YearButton.astro";
import Image from "astro/components/Image.astro";
import Layout from "./Layout.astro";
import fs from "path";
import Accordion from "../components/Accordion/Accordion.astro";

interface Props {
  year: string;
  pictures: ImageMetadata[];
}

const prop = Astro.props;
---

<Layout>
  <div class="mx-auto max-w-[96rem] px-10 py-10 space-y-4 text-white gap-10">
    <Accordion title="Year of Progress">
      <div
        class="bg-midnight rounded-lg flex flex-col md:flex-row justify-evenly overflow-x-auto"
      >
        <a href="/arts" class="w-full">
          <button
            class={`w-full hover:bg-midnight-light duration-300 py-4 font-bold text-3xl ${prop.year === "All" ? "bg-midnight-light" : ""}`}
          >
            All
          </button>
        </a>
        <YearButton year={2024} currentYear={prop.year} />
        <YearButton year={2023} currentYear={prop.year} />
        <YearButton year={2022} currentYear={prop.year} />
        <YearButton year={2021} currentYear={prop.year} />
        <YearButton year={2020} currentYear={prop.year} />
        <YearButton year={2019} currentYear={prop.year} />
      </div>
    </Accordion>

    <div class="w-full flex justify-center">
      <ul class="flex flex-wrap gap-2 justify-center">
        {
          prop.pictures.reverse().map(async (x, i) => {
            const loadType = i > 17 ? "lazy" : "eager";
            const baseName = fs.basename(x.src);
            const artworkName = baseName
              .split(".")[0]
              .substring(11)
              .replaceAll("_", " ");
            const year = baseName.split("-")[2].substring(0, 4);
            return (
              <li class="list-none h-[300px] cursor-pointer relative">
                <a href={`/arts/${year}/${artworkName}`}>
                  <Image
                    class="object-cover w-full h-full align-middle rounded"
                    src={x}
                    alt={artworkName}
                    loading={loadType}
                  />
                </a>
              </li>
            );
          })
        }
      </ul>
    </div>
  </div>
</Layout>
